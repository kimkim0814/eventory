// DON'T EDIT *** generated by scaneo *** DON'T EDIT //

package model

import "database/sql"

func ScanEvent(r *sql.Row) (Event, error) {
	var s Event
	if err := r.Scan(
		&s.EventId,
		&s.Title,
		&s.Desc,
		&s.Url,
		&s.Limit,
		&s.Accepted,
		&s.Waitlisted,
		&s.Address,
		&s.Place,
		&s.StratAt,
		&s.EndAt,
		&s.ID,
	); err != nil {
		return Event{}, err
	}
	return s, nil
}

func ScanEvents(rs *sql.Rows) ([]Event, error) {
	structs := make([]Event, 0, 16)
	var err error
	for rs.Next() {
		var s Event
		if err = rs.Scan(
			&s.EventId,
			&s.Title,
			&s.Desc,
			&s.Url,
			&s.Limit,
			&s.Accepted,
			&s.Waitlisted,
			&s.Address,
			&s.Place,
			&s.StratAt,
			&s.EndAt,
			&s.ID,
		); err != nil {
			return nil, err
		}
		structs = append(structs, s)
	}
	if err = rs.Err(); err != nil {
		return nil, err
	}
	return structs, nil
}

func ScanEventsJson(rs *sql.Rows) ([]EventJson, error) {
	structs := make([]EventJson, 0, 16)
	var err error
	for rs.Next() {
		var s EventJson
		if err = rs.Scan(
			&s.EventId,
			&s.Title,
			&s.Desc,
			&s.Url,
			&s.Limit,
			&s.Accepted,
			&s.Waitlisted,
			&s.Address,
			&s.Place,
			&s.StratAt,
			&s.EndAt,
			&s.ID,
		); err != nil {
			return nil, err
		}
		structs = append(structs, s)
	}
	if err = rs.Err(); err != nil {
		return nil, err
	}
	return structs, nil
}

func ScanEventCount(r *sql.Row) (Event, error) {
	var s Event
	if err := r.Scan(
		&s.ID,
	); err != nil {
		return Event{}, err
	}
	return s, nil
}
