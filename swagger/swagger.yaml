basePath: /api/v2
consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  Event:
    description: イベント情報 (default view)
    example:
      ID: 1
      accepte: 10
      address: 東京都渋谷区3-31-205
      apiType: ATDN
      endAt: 1990-08-01T04:03:55+09:00
      identifier: 3-12313
      limits: 10
      startAt: 1984-03-14T21:11:03+09:00
      title: アジャイル開発勉強会
      url: 2016-01-01 10:10:12
      wait: 5
    properties:
      ID:
        description: ID
        example: 1
        format: int64
        type: integer
      accepte:
        description: 参加登録済み人数
        example: 10
        format: int64
        type: integer
      address:
        description: 住所
        example: 東京都渋谷区3-31-205
        type: string
      apiType:
        description: APIの種類 enum('atdn','connpass','doorkeeper')
        example: ATDN
        type: string
      endAt:
        description: 終了日時
        example: 1990-08-01T04:03:55+09:00
        format: date-time
        type: string
      identifier:
        description: 識別子(api-event_id)
        example: 3-12313
        type: string
      limits:
        description: 参加人数上限
        example: 10
        format: int64
        type: integer
      startAt:
        description: 開催日時
        example: 1984-03-14T21:11:03+09:00
        format: date-time
        type: string
      title:
        description: イベント名
        example: アジャイル開発勉強会
        type: string
      url:
        description: イベントページURL
        example: 2016-01-01 10:10:12
        type: string
      wait:
        description: キャンセル待ち人数
        example: 5
        format: int64
        type: integer
    required:
    - ID
    - identifier
    - apiType
    - title
    - url
    - limits
    - accepte
    - wait
    - address
    - startAt
    - endAt
    title: 'Mediatype identifier: application/vnd.event+json; view=default'
    type: object
  EventCollection:
    description: EventCollection is the media type for an array of Event (default
      view)
    example:
    - ID: 1
      accepte: 10
      address: 東京都渋谷区3-31-205
      apiType: ATDN
      endAt: 1990-08-01T04:03:55+09:00
      identifier: 3-12313
      limits: 10
      startAt: 1984-03-14T21:11:03+09:00
      title: アジャイル開発勉強会
      url: 2016-01-01 10:10:12
      wait: 5
    - ID: 1
      accepte: 10
      address: 東京都渋谷区3-31-205
      apiType: ATDN
      endAt: 1990-08-01T04:03:55+09:00
      identifier: 3-12313
      limits: 10
      startAt: 1984-03-14T21:11:03+09:00
      title: アジャイル開発勉強会
      url: 2016-01-01 10:10:12
      wait: 5
    items:
      $ref: '#/definitions/Event'
    title: 'Mediatype identifier: application/vnd.event+json; type=collection; view=default'
    type: array
  Genre:
    description: ジャンル (default view)
    example:
      ID: 1
      name: javascript
    properties:
      ID:
        description: ジャンルID
        example: 1
        format: int64
        type: integer
      name:
        description: ジャンル名
        example: javascript
        type: string
    title: 'Mediatype identifier: application/vnd.genre+json; view=default'
    type: object
  GenreCollection:
    description: GenreCollection is the media type for an array of Genre (default
      view)
    example:
    - ID: 1
      name: javascript
    - ID: 1
      name: javascript
    - ID: 1
      name: javascript
    items:
      $ref: '#/definitions/Genre'
    title: 'Mediatype identifier: application/vnd.genre+json; type=collection; view=default'
    type: array
  Message:
    description: ユーザー情報 (default view)
    example:
      message: created
    properties:
      message:
        description: トークン
        example: created
        type: string
    title: 'Mediatype identifier: application/vnd.message+json; view=default'
    type: object
  Token:
    description: ユーザー情報 (default view)
    example:
      token: az31e85g219491271529068e996f763d2924fbfw947211ffa8c4daafa5ce23b5
    properties:
      token:
        description: トークン
        example: az31e85g219491271529068e996f763d2924fbfw947211ffa8c4daafa5ce23b5
        type: string
    title: 'Mediatype identifier: application/vnd.token+json; view=default'
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
externalDocs:
  description: eventory guide
  url: https://github.com/tikasan/eventory/wiki
host: localhost:8080
info:
  description: 'ITイベント情報集アプリAPI '
  license:
    name: MIT
    url: https://github.com/tikasan/eventory/blob/master/LICENSE
  title: 'eventory: ITイベント収集アプリ'
  version: ""
paths:
  /cron/events/appendgenre:
    get:
      description: <b>イベントにジャンルを付加する<b>
      operationId: cron#append genre
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
      schemes:
      - http
      security:
      - cronToken: []
      summary: append genre cron
      tags:
      - cron
  /cron/events/fetch:
    get:
      description: <b>最新イベント情報の取得<b>
      operationId: cron#new event fetch
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
      schemes:
      - http
      security:
      - cronToken: []
      summary: new event fetch cron
      tags:
      - cron
  /cron/user/events/fixfollow:
    get:
      description: "<b>イベントフォロー操作の確定</b><br>\n\t\tuser_follow_eventsテーブルのbatch_processedをtrueに変更する"
      operationId: cron#fix user follow
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
      schemes:
      - http
      security:
      - cronToken: []
      summary: fix user follow cron
      tags:
      - cron
  /events/{eventID}/keep:
    put:
      description: "<b>イベントお気に入り操作</b><br>\n\t\tisKeepがtrueだった場合はフォロー、falseの場合はアンフォローとする。<br>\n\t\t存在しないイベントへのリクエストは404エラーを返す。"
      operationId: events#keep
      parameters:
      - description: イベントID
        in: path
        name: eventID
        required: true
        type: integer
      - description: キープ操作
        in: query
        name: isKeep
        required: true
        type: boolean
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - userToken: []
      summary: keep events
      tags:
      - events
  /events/genre/{id}:
    get:
      description: "<b>イベント情報取得</b><br>\n\t\t<ul>\n\t\t\t<li>/genre/:id -> ジャンル別新着情報</li>\n\t\t\t<li>/new
        -> ユーザー別新着情報</li>\n\t\t\t<li>/keep -> ユーザーがキープしているイベント</li>\n\t\t\t<li>/nokeep
        -> ユーザーが興味なしにしたイベント</li>\n\t\t\t<li>/popular -> キープ数が多い。注目されているイベント</li>\n\t\t\t<li>/recommend
        -> ユーザー属性に合わせたおすすめイベント</li>\n\t\t</ul>\n\t\tイベントの情報は区切って送信され、スクロールイベントで次のページのイベント情報を取得することを想定している。<br>\n\t\tまた、キープや興味なしの操作は１日に１回行われるバッチ処理時に確定されるまでは、分類されずに表示される。"
      operationId: events#list
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - default: 0
        description: ページ(1->2->3->4)
        in: query
        minimum: 1
        name: page
        required: false
        type: integer
      - default: ""
        description: キーワード検索
        in: query
        name: q
        required: false
        type: string
      - default: ""
        description: ソート
        enum:
        - created_asc
        - created_desc
        - ""
        in: query
        name: sort
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EventCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
      schemes:
      - http
      security:
      - userToken: []
      summary: list events
      tags:
      - events
  /events/keep:
    get:
      description: "<b>イベント情報取得</b><br>\n\t\t<ul>\n\t\t\t<li>/genre/:id -> ジャンル別新着情報</li>\n\t\t\t<li>/new
        -> ユーザー別新着情報</li>\n\t\t\t<li>/keep -> ユーザーがキープしているイベント</li>\n\t\t\t<li>/nokeep
        -> ユーザーが興味なしにしたイベント</li>\n\t\t\t<li>/popular -> キープ数が多い。注目されているイベント</li>\n\t\t\t<li>/recommend
        -> ユーザー属性に合わせたおすすめイベント</li>\n\t\t</ul>\n\t\tイベントの情報は区切って送信され、スクロールイベントで次のページのイベント情報を取得することを想定している。<br>\n\t\tまた、キープや興味なしの操作は１日に１回行われるバッチ処理時に確定されるまでは、分類されずに表示される。"
      operationId: events#list#2
      parameters:
      - in: query
        name: id
        required: false
        type: string
      - default: 0
        description: ページ(1->2->3->4)
        in: query
        minimum: 1
        name: page
        required: false
        type: integer
      - default: ""
        description: キーワード検索
        in: query
        name: q
        required: false
        type: string
      - default: ""
        description: ソート
        enum:
        - created_asc
        - created_desc
        - ""
        in: query
        name: sort
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EventCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
      schemes:
      - http
      security:
      - userToken: []
      summary: list events
      tags:
      - events
  /events/new:
    get:
      description: "<b>イベント情報取得</b><br>\n\t\t<ul>\n\t\t\t<li>/genre/:id -> ジャンル別新着情報</li>\n\t\t\t<li>/new
        -> ユーザー別新着情報</li>\n\t\t\t<li>/keep -> ユーザーがキープしているイベント</li>\n\t\t\t<li>/nokeep
        -> ユーザーが興味なしにしたイベント</li>\n\t\t\t<li>/popular -> キープ数が多い。注目されているイベント</li>\n\t\t\t<li>/recommend
        -> ユーザー属性に合わせたおすすめイベント</li>\n\t\t</ul>\n\t\tイベントの情報は区切って送信され、スクロールイベントで次のページのイベント情報を取得することを想定している。<br>\n\t\tまた、キープや興味なしの操作は１日に１回行われるバッチ処理時に確定されるまでは、分類されずに表示される。"
      operationId: events#list#1
      parameters:
      - in: query
        name: id
        required: false
        type: string
      - default: 0
        description: ページ(1->2->3->4)
        in: query
        minimum: 1
        name: page
        required: false
        type: integer
      - default: ""
        description: キーワード検索
        in: query
        name: q
        required: false
        type: string
      - default: ""
        description: ソート
        enum:
        - created_asc
        - created_desc
        - ""
        in: query
        name: sort
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EventCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
      schemes:
      - http
      security:
      - userToken: []
      summary: list events
      tags:
      - events
  /events/nokeep:
    get:
      description: "<b>イベント情報取得</b><br>\n\t\t<ul>\n\t\t\t<li>/genre/:id -> ジャンル別新着情報</li>\n\t\t\t<li>/new
        -> ユーザー別新着情報</li>\n\t\t\t<li>/keep -> ユーザーがキープしているイベント</li>\n\t\t\t<li>/nokeep
        -> ユーザーが興味なしにしたイベント</li>\n\t\t\t<li>/popular -> キープ数が多い。注目されているイベント</li>\n\t\t\t<li>/recommend
        -> ユーザー属性に合わせたおすすめイベント</li>\n\t\t</ul>\n\t\tイベントの情報は区切って送信され、スクロールイベントで次のページのイベント情報を取得することを想定している。<br>\n\t\tまた、キープや興味なしの操作は１日に１回行われるバッチ処理時に確定されるまでは、分類されずに表示される。"
      operationId: events#list#3
      parameters:
      - in: query
        name: id
        required: false
        type: string
      - default: 0
        description: ページ(1->2->3->4)
        in: query
        minimum: 1
        name: page
        required: false
        type: integer
      - default: ""
        description: キーワード検索
        in: query
        name: q
        required: false
        type: string
      - default: ""
        description: ソート
        enum:
        - created_asc
        - created_desc
        - ""
        in: query
        name: sort
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EventCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
      schemes:
      - http
      security:
      - userToken: []
      summary: list events
      tags:
      - events
  /events/popular:
    get:
      description: "<b>イベント情報取得</b><br>\n\t\t<ul>\n\t\t\t<li>/genre/:id -> ジャンル別新着情報</li>\n\t\t\t<li>/new
        -> ユーザー別新着情報</li>\n\t\t\t<li>/keep -> ユーザーがキープしているイベント</li>\n\t\t\t<li>/nokeep
        -> ユーザーが興味なしにしたイベント</li>\n\t\t\t<li>/popular -> キープ数が多い。注目されているイベント</li>\n\t\t\t<li>/recommend
        -> ユーザー属性に合わせたおすすめイベント</li>\n\t\t</ul>\n\t\tイベントの情報は区切って送信され、スクロールイベントで次のページのイベント情報を取得することを想定している。<br>\n\t\tまた、キープや興味なしの操作は１日に１回行われるバッチ処理時に確定されるまでは、分類されずに表示される。"
      operationId: events#list#4
      parameters:
      - in: query
        name: id
        required: false
        type: string
      - default: 0
        description: ページ(1->2->3->4)
        in: query
        minimum: 1
        name: page
        required: false
        type: integer
      - default: ""
        description: キーワード検索
        in: query
        name: q
        required: false
        type: string
      - default: ""
        description: ソート
        enum:
        - created_asc
        - created_desc
        - ""
        in: query
        name: sort
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EventCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
      schemes:
      - http
      security:
      - userToken: []
      summary: list events
      tags:
      - events
  /events/recommend:
    get:
      description: "<b>イベント情報取得</b><br>\n\t\t<ul>\n\t\t\t<li>/genre/:id -> ジャンル別新着情報</li>\n\t\t\t<li>/new
        -> ユーザー別新着情報</li>\n\t\t\t<li>/keep -> ユーザーがキープしているイベント</li>\n\t\t\t<li>/nokeep
        -> ユーザーが興味なしにしたイベント</li>\n\t\t\t<li>/popular -> キープ数が多い。注目されているイベント</li>\n\t\t\t<li>/recommend
        -> ユーザー属性に合わせたおすすめイベント</li>\n\t\t</ul>\n\t\tイベントの情報は区切って送信され、スクロールイベントで次のページのイベント情報を取得することを想定している。<br>\n\t\tまた、キープや興味なしの操作は１日に１回行われるバッチ処理時に確定されるまでは、分類されずに表示される。"
      operationId: events#list#5
      parameters:
      - in: query
        name: id
        required: false
        type: string
      - default: 0
        description: ページ(1->2->3->4)
        in: query
        minimum: 1
        name: page
        required: false
        type: integer
      - default: ""
        description: キーワード検索
        in: query
        name: q
        required: false
        type: string
      - default: ""
        description: ソート
        enum:
        - created_asc
        - created_desc
        - ""
        in: query
        name: sort
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EventCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
      schemes:
      - http
      security:
      - userToken: []
      summary: list events
      tags:
      - events
  /genres:
    get:
      description: "<b>ジャンル検索</b><br>\n\t\tジャンル名で検索し、当てはまるジャンルを返す。その際に対象となるジャンルがなかった場合、<br>\n\t\tジャンル追加ボタンを表示し、追加出来るようにする。"
      operationId: genres#list
      parameters:
      - default: 0
        description: ページ(1->2->3->4)
        in: query
        minimum: 1
        name: page
        required: false
        type: integer
      - default: ""
        description: ジャンル名検索に使うキーワード
        in: query
        maxLength: 30
        minLength: 0
        name: q
        required: false
        type: string
      - default: ""
        description: ソート
        enum:
        - created_asc
        - created_desc
        - ""
        in: query
        name: sort
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GenreCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
      schemes:
      - http
      security:
      - userToken: []
      summary: list genres
      tags:
      - genres
  /genres/{genreID}/follow:
    delete:
      description: "<b>ジャンルフォロー操作</b><br>\n\t\tPUTでフォロー、DELETEでアンフォローをする。<br>\n\t\tHTTPメソッド意外は同じパラメーターで動作する。<br>\n\t\t存在しない都道府県へのリクエストは404エラーを返す。"
      operationId: genres#follow#1
      parameters:
      - description: ジャンルID
        in: path
        name: genreID
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - userToken: []
      summary: follow genres
      tags:
      - genres
    put:
      description: "<b>ジャンルフォロー操作</b><br>\n\t\tPUTでフォロー、DELETEでアンフォローをする。<br>\n\t\tHTTPメソッド意外は同じパラメーターで動作する。<br>\n\t\t存在しない都道府県へのリクエストは404エラーを返す。"
      operationId: genres#follow
      parameters:
      - description: ジャンルID
        in: path
        name: genreID
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - userToken: []
      summary: follow genres
      tags:
      - genres
  /genres/new:
    post:
      description: "<b>ジャンルの新規作成</b><br>\n\t\t新しく作成するジャンル名を送信して、新規作成を行う。追加処理が完了とするとジャンルIDが返ってくるので、それを自動でフォローするようにする。<br>\n\t\t但し、ジャンルを新規作成する前に、ジャンル名を検索するフローを挟み、検索結果に出てこなかった場合に追加できるようにする。"
      operationId: genres#create
      parameters:
      - description: ジャンル名
        in: query
        maxLength: 30
        minLength: 1
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Genre'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
      schemes:
      - http
      security:
      - userToken: []
      summary: create genres
      tags:
      - genres
  /prefs/{prefID}/follow:
    delete:
      description: "<b>都道府県フォロー操作</b><br>\n\t\tPUTでフォロー、DELETEでアンフォローをする。<br>\n\t\tHTTPメソッド意外は同じパラメーターで動作する。<br>\n\t\t存在しない都道府県へのリクエストは404エラーを返す。"
      operationId: prefs#follow#1
      parameters:
      - description: 都道府県ID
        in: path
        name: prefID
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - userToken: []
      summary: follow prefs
      tags:
      - prefs
    put:
      description: "<b>都道府県フォロー操作</b><br>\n\t\tPUTでフォロー、DELETEでアンフォローをする。<br>\n\t\tHTTPメソッド意外は同じパラメーターで動作する。<br>\n\t\t存在しない都道府県へのリクエストは404エラーを返す。"
      operationId: prefs#follow
      parameters:
      - description: 都道府県ID
        in: path
        name: prefID
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - userToken: []
      summary: follow prefs
      tags:
      - prefs
  /users/login:
    post:
      description: "<b>ログイン認証</b><br>\n\t\t正規ユーザーのメールアドレスとパスワードのハッシュを送ることで、ユーザー認証を行う<br>\n\t\t正しくユーザー認証が完了した場合、正規ユーザーのIDを仮ユーザーIDに紐付けを行い。<br>\n\t\tユーザーの行動を別端末で引き継ぐことが出来る。<br>"
      operationId: users#login
      parameters:
      - description: メールアドレス
        format: email
        in: query
        name: email
        required: true
        type: string
      - description: パスワードハッシュ(^[a-z0-9]{64}$)
        in: query
        name: password_hash
        pattern: ^[a-z0-9]{64}$
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      security:
      - userToken: []
      summary: login users
      tags:
      - users
  /users/new:
    post:
      description: "<b>正規ユーザーの作成</b><br>\n\t\tメールアドレスとパスワードハッシュを使って、正規ユーザーの作成を行う。<br>\n\t\tもし、既に存在するアカウントだった場合は、\"alreadyExists\"を返す。<br>\n\t\t正しく実行された場合は、\"ok\"を返す。"
      operationId: users#regular create
      parameters:
      - description: メールアドレス
        format: email
        in: query
        name: email
        required: true
        type: string
      - description: パスワードハッシュ(^[a-z0-9]{64}$)
        in: query
        name: password_hash
        pattern: ^[a-z0-9]{64}$
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "401":
          description: Unauthorized
      schemes:
      - http
      security:
      - userToken: []
      summary: regular create users
      tags:
      - users
  /users/status:
    put:
      description: "<b>ユーザーの端末情報更新</b><br>\n\t\t利用者のバージョンや端末情報を更新する。この更新処理は起動時に行われるものとする。"
      operationId: users#status
      parameters:
      - description: アプリのバージョン
        in: query
        name: client_version
        required: true
        type: string
      - description: OSとバージョン(iOS 10.2など)
        in: query
        name: platform
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      security:
      - userToken: []
      summary: status users
      tags:
      - users
  /users/tmp:
    post:
      description: "<b>一時ユーザーの作成</b><br>\n\t\t初回起動時に仮ユーザーを作成する。ここで与えられるユーザーIDは、メールアドレスなどとひも付きがないため、<br>\n\t\t端末が変わるとtokenが変わるので、別端末で共有するには、正規ユーザーの登録が必要になる。"
      operationId: users#tmp create
      parameters:
      - description: アプリのバージョン
        in: query
        name: client_version
        required: true
        type: string
      - description: 識別子(android:Android_ID, ios:IDFV)
        in: query
        name: identifier
        pattern: (^[a-z0-9]{16}$|^[a-z0-9\-]{36}$)
        required: true
        type: string
      - description: OSとバージョン
        in: query
        name: platform
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: tmp create users
      tags:
      - users
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  NotFound:
    description: Not Found
  OK:
    description: OK
  Unauthorized:
    description: Unauthorized
schemes:
- http
securityDefinitions:
  cronToken:
    in: header
    name: X-Appengine-Cron
    type: apiKey
  userToken:
    description: ユーザートークン
    in: header
    name: X-Authorization
    type: apiKey
swagger: "2.0"
